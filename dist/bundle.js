!function(n){var a={};function e(t){if(a[t])return a[t].exports;var o=a[t]={i:t,l:!1,exports:{}};return n[t].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=n,e.c=a,e.d=function(n,a,t){e.o(n,a)||Object.defineProperty(n,a,{enumerable:!0,get:t})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,a){if(1&a&&(n=e(n)),8&a)return n;if(4&a&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&a&&"string"!=typeof n)for(var o in n)e.d(t,o,function(a){return n[a]}.bind(null,o));return t},e.n=function(n){var a=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(a,"a",a),a},e.o=function(n,a){return Object.prototype.hasOwnProperty.call(n,a)},e.p="",e(e.s=0)}([function(n,a,e){"use strict";e.r(a);var t=()=>{document.getElementById("content").innerHTML+='\n                    <section class="front_page">\n                        <div class="front_copy">\n                            The tastiest, the hottests, the best...\n                        </div>\n                    </section>\n\n                    <div class = \'home\' style="height: 600px">\n                    <div class="home_info d-flex justify-content-center">\n                        <div class="home_in_info">\n                            <span>Chillious Corp.</span>\n                            <p> This explains how perfect and wonderful this restaurant is</p>\n                            <p> You don\'t believe me? well... you shouldn\'t</p>\n                            <p>This could be fake you know? </p>\n                            <p>Specially in this times: pandemics, massive public demonstrations...</p>\n                            <p> I mean, you shouldn\'t trust this whole "reality" thing amirite?</p>\n                            <p>Just buy or food ok? It\'s nice and spicy...</p>\n                        </div>\n                    </div>                            \n                    </div>\n    ';document.getElementById("menu").addEventListener("click",()=>{navbar(),o()})};var o=()=>{document.getElementById("content").innerHTML+='\n                   \n                    <section class="front_menu">\n                        <div class="pozole" type="button" data-toggle="modal" data-target="#pozole_modal">\n                            <img class = \'img-fluid\' src="https://bit.ly/38duo2z" alt="">\n                        </div>\n                        <div class="tacos" type="button" data-toggle="modal" data-target="#tacos_modal">\n                            <img class = \'img-fluid\' src="https://bit.ly/3idpXJA" alt="">\n                        </div>\n                        <div class="mole" type="button" data-toggle="modal" data-target="#mole_modal">\n                            <img class = \'img-fluid\' src="https://nym.ag/3dBWzcx" alt="">\n                        </div>\n\n                        <div class="modal fade" id="pozole_modal" tabindex="-1" role="dialog" aria-labelledby="pozole_modal" aria-hidden="true">\n                            <div class="modal-dialog" role="document">\n                            <div class="modal-content">\n                                <div class="modal-header">\n                                <h5 class="modal-title" id="pozoleModalLabel">POZOLE</h5>\n                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                                    <span aria-hidden="true">&times;</span>\n                                </button>\n                                </div>\n                                <div class="modal-body">\n                                Pozole Spanish pronunciation: [po\'sole] (from Nahuatl languages: pozolli , meaning "hominy"), is a traditional soup or stew from Mexican cuisine. It is made from hominy with meat (typically pork, but possibly chicken), and can be seasoned and garnished with shredded lettuce or cabbage, chile peppers, onion, garlic, radishes, avocado, salsa or limes. Known in Mesoamerica since the pre-Columbian era, the stew is today common across Mexico and neighboring countries, and is served both as a day-to-day meal and as a festive dish.\n                                </div>\n                                <div class="modal-footer">\n                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>\n                                \n                                </div>\n                            </div>\n                            </div>\n                        </div>\n                        <div class="modal fade" id="tacos_modal" tabindex="-1" role="dialog" aria-labelledby="tacos_modal" aria-hidden="true">\n                            <div class="modal-dialog" role="document">\n                            <div class="modal-content">\n                                <div class="modal-header">\n                                <h5 class="modal-title" id="tacosModalLabel">TACOS</h5>\n                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                                    <span aria-hidden="true">&times;</span>\n                                </button>\n                                </div>\n                                <div class="modal-body">\n                                A taco (US: /ˈtɑːkoʊ/, UK: /ˈtækoʊ/, Spanish: [ˈtako]) is a traditional Mexican dish consisting of a small hand-sized corn or wheat tortilla topped with a filling. The tortilla is then folded around the filling and eaten by hand. A taco can be made with a variety of fillings, including beef, pork, chicken, seafood, vegetables, and cheese, allowing great versatility and variety. They are often garnished with various condiments, such as salsa, guacamole, or sour cream, and vegetables, such as lettuce, onion, tomatoes, and chiles. Tacos are a common form of antojitos, or Mexican street food, which have spread around the world.\n\n                    Tacos can be contrasted with similar foods such as burrito, which are often much larger and rolled rather than folded, taquitos which are rolled and fried, or chalupas/tostadas, in which the tortilla is fried before filling.\n                                </div>\n                                <div class="modal-footer">\n                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>\n                                \n                                </div>\n                            </div>\n                            </div>\n                        </div>\n                        <div class="modal fade" id="mole_modal" tabindex="-1" role="dialog" aria-labelledby="mole_modal" aria-hidden="true">\n                            <div class="modal-dialog" role="document">\n                            <div class="modal-content">\n                                <div class="modal-header">\n                                <h5 class="modal-title" id="moleModalLabel">MOLE</h5>\n                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                                    <span aria-hidden="true">&times;</span>\n                                </button>\n                                </div>\n                                <div class="modal-body">\n                                Mole (/ˈmoʊleɪ/, /ˈmoʊli/ IPA: [ˈmole] ; from Nahuatl mōlli, "sauce") is a traditional marinade and sauce originally used in Mexican cuisine. In contemporary Mexico the term is used for a number of sauces, some quite dissimilar, including black, red / Colorado, yellow, green, almendrado, de olla, huaxmole, guacamole, and pipián. Generally, a mole sauce contains a fruit, chili pepper, nut, and such spices as black pepper, cinnamon, cumin. Outside of Mexico, it typically refers to mole poblano.\n                                </div>\n                                <div class="modal-footer">\n                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>\n                                \n                                </div>\n                            </div>\n                            </div>\n                        </div>\n\n                    </section>\n\n\n\n                    <div class = \'home\' >\n                        <div class="container">\n                            \n                        </div>                            \n                    </div> ';document.getElementById("menu").addEventListener("click",()=>{navbar(),t()})};(()=>{const n=document.getElementById("content");n.innerHTML="";n.innerHTML+='\n                        <nav class="nav">\n                            <div class="container">\n                                <div class="logo">\n                                    \n                                </div>\n                                <div id="mainListDiv" class="main_list">\n                                    <ul class="navlinks">\n                                        <li><a href="#" id = \'about\'>About</a></li>\n                                        <li><a href="#" id = \'menu\'>Menu</a></li>\n                                        <li><a href="#" id = \'contact\'>Contact</a></li>\n                                    </ul>\n                                </div>\n                                <span class="navTrigger">\n                                    <i></i>\n                                    <i></i>\n                                    <i></i>\n                                </span>\n                            </div>\n                        </nav>\n                        \n                        '})(),t()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,